buildscript {
    ext {
        springBootVersion = '1.2.3.RELEASE'
    }
    repositories {
        mavenCentral()
        //maven { url 'http://repo.spring.io/milestone/'}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
     }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
//apply plugin: 'io.spring.dependency-management' 
apply plugin: 'war'

run {
    systemProperties = ['aws.accessKeyId':'$System.env.AWS_KEY',
                        'aws.secretKey':'$System.env.AWS_SECRET']
}

war {
    baseName = 'SAG'
    version =  '0.1.0'
    from('../../martus-android/') {
        include '*.gradle'
        into('WEB-INF/classes/static/SecureAppBuildMaster')
    }
    from('../../martus-android/secure-app') {
        include '**/**'
        into('WEB-INF/classes/static/SecureAppBuildMaster/secure-app')
     }
    from('src/main/resources/static/FDroidMaster') {
        include '**/**'
        into('WEB-INF/classes/static/FDroidMaster')
    }
    
    //Bean MessageSource messageSource()  doesn't work in WAR file deployment
    //remove this once we figure out why, since we are duplicating these files
    from('messages') {
        include '**/**'
        into('WEB-INF/classes/')
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    //maven { url 'http://repo.spring.io/milestone/'}
}

check.dependsOn.remove(test)
               
dependencies {
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-logging")

//    compile("org.springframework.security:spring-security-web:4.0.2.RELEASE")

    compile files('./thirdparty/martus-api-52.jar')
    compile files('./thirdparty/JavaRosa/bin/javarosa-libraries.jar')
    compile files('./thirdparty/ws-commons-util-1.0.2.jar')
	compile files('./thirdparty/imgscalr-lib-4/imgscalr-lib-4.2.jar')
    compile files('./thirdparty/cloudwatch-backlog-appender-1.36.jar')
    compile files('./thirdparty/java-json.jar')
	
 	compile 'net.sf.kxml:kxml2:2.3.0'
	compile 'org.apache.xmlrpc:xmlrpc-common:3.1.3'
	compile 'org.apache.xmlrpc:xmlrpc-client:3.1.3'
	compile 'commons-logging:commons-logging:1.1'
   	compile 'org.bouncycastle:bcprov-jdk15on:1.48'
   	compile 'xmlpull:xmlpull:1.1.3.1'
    compile 'org.apache.commons:commons-exec:1.3'

    testCompile("org.springframework.boot:spring-boot-starter-test") 
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile 'com.amazonaws:aws-java-sdk:+'
	//compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.3'
 	//compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.3'
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
